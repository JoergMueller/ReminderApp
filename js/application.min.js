!function(){"use strict";var app,languages={"default":"de",list:{de:{"short":"de",locale:"de_DE",name:"Deutsch",timezone:"Europe/Berlin",datefmt:"dd.MM.yyyy HH:mm"},en:{"short":"en",locale:"en_US",name:"English",timezone:"UTC",datefmt:"d MMM  yyyy h:mma"}}};app=angular.module("ReminderApp",["LocalForageModule","angularMoment","gettext","ngSanitize"]).config(["$localForageProvider",function($localForageProvider){$localForageProvider.setNotify(!0,!0),$localForageProvider.config({driver:"localStorageWrapper",version:1,storeName:"keyvaluepairs",description:"some description",name:"ReminderApp"})}]).run(["gettextCatalog","amMoment",function(gettextCatalog,amMoment){amMoment.changeLocale("de"),gettextCatalog.setCurrentLanguage("de"),gettextCatalog.debug=!0}]),app.controller("MainController",["$scope","gettextCatalog","$localForage","amMoment",function($scope,gettextCatalog,$localForage,amMoment){var lang,currentLangIndex,inc,i,self=this;$scope.modal={},this.debug=!1,this.languages=languages,lang=JSON.parse(localStorage.getItem("ReminderApp/lang"))||null,null===lang&&(lang=this.languages.default,$localForage.setItem("lang",lang)),gettextCatalog.setCurrentLanguage(lang),gettextCatalog.loadRemote("/js/language/"+lang+".json"),$scope.$watch("correctlyLanguageSelected",function(arg){$scope.switchLanguage(arg)}),$scope.switchLanguage=function(arg){void 0!==arg&&(lang=void 0===self.languages.list[arg.value]?self.languages.default:arg.value,gettextCatalog.setCurrentLanguage(lang),gettextCatalog.loadRemote("/js/language/"+lang+".json"),$localForage.setItem("lang",lang),amMoment.changeLocale(lang))},this.options=[],currentLangIndex=null,inc=0;for(i in this.languages.list)currentLangIndex=this.languages.list[i].short===lang?inc:currentLangIndex,this.options.push({label:this.languages.list[i].name,value:this.languages.list[i].short}),inc+=1;$scope.correctlyLanguageSelected=this.options[currentLangIndex],amMoment.changeLocale(lang),$scope.localeSet=this.languages.list[lang],this.langIsSet=function(selectedLang){return gettextCatalog.getCurrentLanguage()===selectedLang}}]),app.controller("UserController",["uuid","$localForage","$scope","_georev","$filter",function(uuid,$localForage){var self=this;this.getUserData=function(){$localForage.getItem("User").then(function(data){self.User=data||{}})},this.setUserData=function(){this.User.id=void 0===this.User.id?uuid.generate():this.User.id,this.User.createdOn=void 0===this.User.createdOn?new Date:this.User.createdOn,$localForage.setItem("User",this.User)},this.User=this.User||this.getUserData()}]),app.service("_georev",["$http",function($http){return{byaddress:function(str,model){return $http.get("https://maps.googleapis.com/maps/api/geocode/json?address="+str).success(function(data){model.coords="OK"===data.status?data.results[0].geometry.location:null})}}}]),app.controller("RemTabbing",["uuid","$localForage","$scope","_georev","$filter",function(uuid,$localForage,$scope,_georev,$filter){var self=this;this.debug=!1,this.tab="#settings",this.today=new Date,this.newEntry={expire:new Date(this.today.getFullYear(),this.today.getMonth(),this.today.getDay()+1,this.today.getHours(),this.today.getMinutes(),0)},$scope.entries=[],this.todo={},$localForage.getItem("tabs").then(function(data){self.tabs=data||[],self.tab=void 0!==data&&void 0!==data[0]?data[0].id:"#setting",data.forEach(function(o){$scope.entries[o.id]=JSON.parse(localStorage.getItem("ReminderApp/"+o.id))})}),this.selectTab=function(newTab){this.tab=newTab},this.removeTab=function(item){var i,newArray=[];if(this.tabs.length){for(i in this.tabs)this.tabs[i].id!==item.id&&newArray.push(this.tabs[i]);$localForage.setItem("tabs",newArray),$localForage.removeItem(item.id),location.reload()}},this.isSelected=function(value){return this.tab===value},this.setTodos=function(item){var i,self=this;if(self.newEntry.expire=new Date($filter("date")(self.newEntry.expire,"yyyy/MM/dd HH:mm:ss Z")),self.newEntry.createdOn=void 0!==self.newEntry.createdOn?self.newEntry.createdOn:new Date,self.newEntry.doneOn=void 0!==self.newEntry.doneOn&&self.newEntry.doneOn!==!1?self.newEntry.doneOn:!1,$scope.entries[item.id]=void 0===$scope.entries[item.id]||null===$scope.entries[item.id]?[]:$scope.entries[item.id],void 0!==self.newEntry.georeverse&&_georev.byaddress(self.newEntry.georeverse,self.newEntry),void 0!==self.newEntry.id)for(i in $scope.entries[item.id])$scope.entries[item.id][i].id===self.newEntry.id&&($scope.entries[item.id][i]=self.newEntry);else self.newEntry.id=uuid.generate(),$scope.entries[item.id].push(self.newEntry);$localForage.setItem(item.id,$scope.entries[item.id]).then(function(){new Date;self.newEntry={expire:new Date($filter("date")(new Date,"yyyy/MM/dd HH:mm:00 Z"))}})},this.getEdit=function(todo){self.newEntry=todo,self.newEntry.expire=new Date($filter("date")(self.newEntry.expire,"yyyy/MM/dd HH:mm:ss Z"))},this.removeTodo=function(selectedTodo,item){var i,newArray=[];if($scope.entries[item.id].length)for(i in $scope.entries[item.id])$scope.entries[item.id][i].id!==selectedTodo.id&&newArray.push($scope.entries[item.id][i]);$scope.entries[item.id]=newArray,$localForage.setItem(item.id,newArray)},this.setDone=function(entry,item){{var i;new Date}for(i in $scope.entries[item.id])$scope.entries[item.id][i].id===entry.id&&($scope.entries[item.id][i].doneOn=$scope.entries[item.id][i].doneOn!==!1?!1:new Date($filter("date")(new Date,"yyyy/MM/dd HH:mm:ss Z")));$localForage.setItem(item.id,$scope.entries[item.id])},this.isDone=function(entry){return entry.doneOn!==!1}}]),app.directive("newEntryForm",function(){return{restrict:"E",templateUrl:"/snippets/new-entry-form.html"}}),app.directive("listForm",function(){return{restrict:"E",templateUrl:"/snippets/list-form.html"}}),app.directive("userForm",function(){return{restrict:"E",templateUrl:"/snippets/user-form.html"}}),app.directive("metaHead",function(){return{restrict:"E",templateUrl:"/snippets/meta-head.html"}}),app.directive("listItem",function(){return{restrict:"E",templateUrl:"/snippets/list-item.html"}}),app.directive("ngReallyClick",[function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(){var message=attrs.ngReallyMessage;message&&confirm(message)&&scope.$apply(attrs.ngReallyClick)})}}}]),app.filter("bbcode",function(){document.createElement("span");return function(input){return(input||"").replace(/\n/g,"<br>").replace(/(\[([\/a-z0-9 ]+)\])/g,"<$2>")}}),app.filter("sprintf",function(){return function(input,args){for(;/%s/.test(input);)input=input.replace(/%s/,args.shift());return input}}),app.controller("RemTabbingForm",["$scope","uuid","$localForage",function($scope,uuid,$localForage){var self=this;this.jtabs=[],$scope.newList={id:uuid.generate()},this.setNewList=function(newListEntry){$localForage.getItem("tabs").then(function(data){self.jtabs=data||[],$scope.newList.name=newListEntry.name,self.jtabs.push($scope.newList),$localForage.setItem("tabs",self.jtabs),$scope.newList={id:uuid.generate()},location.reload()})}}]),app.factory("uuid",function(){var svc={generate:function(){var uuid,d=(new Date).getTime();return uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"===c?r:3&r|8).toString(16)})},empty:function(){return"00000000-0000-0000-0000-000000000000"}};return svc}),app.directive("richTextEditor",function(){return{restrict:"A",replace:!0,require:"?ngModel",transclude:!0,template:'<div><textarea class="form-control h300" ng-model="tab.newEntry.description"></textarea></div>',link:function($scope,element,attrs,ctrl){var textarea=$(element.find("textarea")).wysihtml5({image:!1,html:!0}),editor=textarea.data("wysihtml5").editor;editor.on("change",function(){$scope.$apply(function(){ctrl.$setViewValue(editor.getValue())})}),ctrl.$render=function(){textarea.html(ctrl.$viewValue),editor.setValue(ctrl.$viewValue)},ctrl.$render()}}})}(localforage);